[unix_http_server]
file=/tmp/restaurant_supervisor.sock   ; path to your socket file

; [inet_http_server]          ; HTTP 服务器，提供 web 管理界面
; port=127.0.0.1:9001         ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性

[supervisord]
logfile=/tmp/restaurant_supervisord.log ; supervisord log file
logfile_maxbytes=50MB       ; maximum size of logfile before rotation
logfile_backups=10          ; number of backed up logfiles
loglevel=info               ; info, debug, warn, trace
pidfile=/var/run/restaurant_supervisord.pid ; pidfile location
nodaemon=false               ; run supervisord as a daemon
minfds=1024                 ; number of startup file descriptors
minprocs=200                ; number of process descriptors

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/restaurant_supervisor.sock ; use a unix:// URL  for a unix socket

[group:web]
programs=restaurant-web

[program:restaurant-web]
command=./main -port=%(process_num)s
stdout_logfile=/data/logs/restaurant-web-%(process_num)s.log
process_name=%(program_name)s-%(process_num)s
numprocs=3
numprocs_start=8066
autostart=true                ; start at supervisord start (default: true)
autorestart=true              ; retstart at unexpected quit (default: true)
startsecs=2                   ; number of secs prog must stay running (def. 1)
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
